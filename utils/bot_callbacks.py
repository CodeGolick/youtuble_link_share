# - *- coding: utf- 8 - *-
import config
from database import db
from utils.decorators import catcherError
from utils.bot_functions import get_user_step

from datetime import datetime
from time import sleep
from telebot import types,util
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

@catcherError
def get_bot_callbacks(bot):

    @catcherError
    @bot.callback_query_handler(func=lambda call: True)
    def command(call):
        cid = call.from_user.id
        username = call.from_user.username
        params = call.data.split('-')
        print(str(cid) +': '+str(params))

        config.userStep[cid] = get_user_step(bot, cid)
        if config.knownUsers[cid] == 'BAN':
            return

        if params[0] == 'menu':
            config.userStep[cid] = 'START'
            markup = types.InlineKeyboardMarkup()
            markup.row(InlineKeyboardButton('üîπ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –Ω–∞–∫—Ä—É—Ç–∫—É', callback_data=f"share-new_link"))
            markup.row(InlineKeyboardButton('üîñ –û –±–æ—Ç–µ', callback_data=f"about"))
            bot.edit_message_text(f'üñêüèª –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {username}!', chat_id=cid, message_id=call.message.id,reply_markup=markup)

        elif params[0] == 'about':
            config.userStep[cid] = 'ABOUT'
            markup = types.InlineKeyboardMarkup()
            markup.row(InlineKeyboardButton('‚óÄÔ∏è–ù–∞–∑–∞–¥', callback_data=f"menu"))
            bot.edit_message_text(f'''üîñ–û –±–æ—Ç–µ

–ü—Ä–∏–≤–µ—Ç—Å–≤—Ç—É—é! –≠—Ç–æ –±–æ—Ç –¥–ª—è –Ω–∞–∫—Ä—É—Ç–∫–∏!

–õ–∏–º–∏—Ç –≤ –¥–µ–Ω—å - 3 –≤–∏–¥–µ–æ
–ù–∞–∫—Ä—É—á–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å 5 –ª–æ–≥–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é
''', chat_id=cid, message_id=call.message.id,reply_markup=markup)

        elif params[0] == 'share':

            if params[1] == 'new_link':

                user_data = db.get_user(cid)
                print(user_data)
                config.userStep[cid] = 'NEW_LINK_MENU'
                tryies = user_data['link_send']
                last_time = user_data['last_upd']
                # print(config.max_per_day)
                if tryies >= config.max_per_day:
                    markup = types.InlineKeyboardMarkup()
                    markup.row(InlineKeyboardButton('‚óÄÔ∏è–ù–∞–∑–∞–¥', callback_data=f"menu"))
                    bot.edit_message_text("‚ùå –í—ã –∏–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–ª–∏ —Å–≤–æ–π –ª–∏–º–∏—Ç", chat_id=cid, message_id=call.message.id,reply_markup=markup)

                    diffs = datetime.now() - datetime.strptime(last_time, '%Y-%m-%d %H:%M:%S')
                    diffs_in_days = round( diffs.total_seconds()/(60*60*24) )
                    if diffs_in_days >= 1:
                        db.update_user_data(cid,'link_send',0)
                        markup = types.InlineKeyboardMarkup()
                        markup.row(InlineKeyboardButton('‚óÄÔ∏è–ù–∞–∑–∞–¥', callback_data=f"menu"))
                        bot.edit_message_text("üöÄ –í–≤–µ–¥–∏—Ç–µ URL –Ω–∞ —é—Ç—É–± –≤–∏–¥–µ–æ –¥–ª—è –Ω–∞–∫—Ä—É—Ç–∫–∏", chat_id=cid, message_id=call.message.id,reply_markup=markup)
                        config.data_transfer_dict[cid] = {'mid':call.message.id}
                        config.userStep[cid] = 'NEW_URL'
                
                else:
                    if last_time == None:
                        db.set_link_delay(cid)
                    else:
                        diffs = datetime.now() - datetime.strptime(last_time, '%Y-%m-%d %H:%M:%S')
                        diffs_in_days = round( diffs.total_seconds()/(60*60*24) )
                        if diffs_in_days >= 1:
                            db.update_user_data(cid,'link_send',0)
                            db.set_link_delay(cid)

                    markup = types.InlineKeyboardMarkup()
                    markup.row(InlineKeyboardButton('‚óÄÔ∏è–ù–∞–∑–∞–¥', callback_data=f"menu"))
                    bot.edit_message_text("üöÄ –í–≤–µ–¥–∏—Ç–µ URL –Ω–∞ —é—Ç—É–± –≤–∏–¥–µ–æ –¥–ª—è –Ω–∞–∫—Ä—É—Ç–∫–∏", chat_id=cid, message_id=call.message.id,reply_markup=markup)
                    config.data_transfer_dict[cid] = {'mid':call.message.id}
                    config.userStep[cid] = 'NEW_URL'

            elif params[1] == 'ok':
                user_id = params[2]
                markup = types.InlineKeyboardMarkup()
                bot.send_message(user_id, '‚úÖ –ù–∞–∫—Ä—É—Ç–∞–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞', parse_mode = 'HTML',reply_markup=markup)
                bot.edit_message_text(call.message.text + '\n\n‚úÖ –ù–∞–∫—Ä—É—Ç–∞–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞', chat_id=cid, message_id=call.message.id ,reply_markup=None, entities=call.message.entities)


            elif params[1] == 'decline':
                user_id = params[2]
                markup = types.InlineKeyboardMarkup()
                bot.send_message(user_id, '‚ùå –ù–∞–∫—Ä—É—Ç–∞–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞', parse_mode = 'HTML',reply_markup=markup)
                bot.edit_message_text(call.message.text + '\n\n‚ùå –ù–∞–∫—Ä—É—Ç–∞–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞', chat_id=cid, message_id=call.message.id ,reply_markup=None, entities=call.message.entities)


        elif params[0] == 'new_user':
            if params[1] == 'new_connect':
                if username == None or username == '':
                    bot.edit_message_text("‚ùå –ù–∏–∫–Ω–µ–π–º –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω", chat_id=cid, message_id=call.message.id,reply_markup=None)
                    return

                bot.edit_message_text("‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞", chat_id=cid, message_id=call.message.id,reply_markup=None)
                for each in config.adminList:

                    msg = f"üí† –ù–æ–≤—ã–π —é–∑–µ—Ä:\n"\
                            "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"\
                            f"üßëüèª‚Äçüíª @{username} [{str(cid)}]\n"\
                            "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ"
                    try:
                        markup = types.InlineKeyboardMarkup()
                        markup.row(
                            InlineKeyboardButton('‚úÖ –ü—Ä–∏–Ω—è—Ç—å', callback_data=f"new_user-accept-{str(cid)}-{username}"), 
                            InlineKeyboardButton('‚ùå –û—Ç–∫–∞–∑–∞—Ç—å', callback_data=f"new_user-decline-{str(cid)}-{username}")
                        )
                        bot.send_message(each, msg,parse_mode = 'HTML', reply_markup = markup) 
                    except Exception as e:
                        pass
            elif params[1] == 'accept':
                user_id = params[2]
                user_username = params[3]

                db.update_user_data(user_id,'status','ACTIVE')
                config.knownUsers[cid] = 'ACTIVE'
                config.userStep[cid] = 'START'

                markup = types.InlineKeyboardMarkup()
                markup.row(InlineKeyboardButton('üîπ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –Ω–∞–∫—Ä—É—Ç–∫—É', callback_data=f"share-new_link"))
                markup.row(InlineKeyboardButton('üîñ –û –±–æ—Ç–µ', callback_data=f"about"))
                bot.send_message(user_id, f'üñêüèª –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_username}!',parse_mode = 'HTML', reply_markup = markup)

                bot.edit_message_text(call.message.text + '\n\n‚úÖ –ü—Ä–∏–Ω—è—Ç', chat_id=cid, message_id=call.message.id ,reply_markup=None, entities=call.message.entities)
            elif params[1] == 'decline':
                user_id = params[2]
                user_username = params[3]
                bot.send_message(user_id, f'‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞',parse_mode = 'HTML', reply_markup = types.ReplyKeyboardRemove())
                bot.edit_message_text(call.message.text + '\n\n‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞', chat_id=cid, message_id=call.message.id ,reply_markup=None, entities=call.message.entities)


